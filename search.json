[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Additional materials",
    "section": "",
    "text": "Below is the statistical process followed to analyse results from the paper titled\nVariability, agreement and sensitivity of neuromuscular and cardiovascular response measures to weekly training load in professional Australian Football athletes.\nAuthor Details: Adriano Arguedas-Soley1,2, Tzlil Shushan3, Andrew Murphy2,4, Nicholas Poulos2, Ric Lovell3, & Dean Norris2\n1 School of Health Sciences, Western Sydney University, Sydney, NSW, Australia\n2 High Performance Department, Greater Western Sydney (GWS) Giants Football Club, Sydney, NSW, Australia\n3 Faculty of Science, Medicine and Health, University of Wollongong, Wollongong, NSW, Australia\n4 School of Health Sciences, Robert Gordon University, Aberdeen, United Kingdom"
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Additional materials",
    "section": "Overview",
    "text": "Overview\nThis section will give a brief overview of analytic steps used:\n\nStep detection and Normalization of High-intensity Intermittent-fixed Submaximal Run (HI-IR)\nCross correlations between outcome variables\nWithin subject variability & Dose-responses associations to external load"
  },
  {
    "objectID": "index.html#load-necessary-packages",
    "href": "index.html#load-necessary-packages",
    "title": "Additional materials",
    "section": "Load necessary packages",
    "text": "Load necessary packages\n\nrequire(\"pacman\")\n\nLoading required package: pacman\n\n\nWarning: package 'pacman' was built under R version 4.3.3\n\npacman::p_load(data.table,lme4,mgcv,broom.mixed,mgcv,tidyverse,rmcorr,tidygraph,\n               igraph,ggraph,ggnetwork,stringr,gratia,emmeans,pracma,signal,DHARMa,performance,collapse,ggthemes)\n\nWe are unable to give access to complete raw data-sets but have uploaded de-identifed snippets so that the key processes could be replicated."
  },
  {
    "objectID": "index.html#step-detection-and-normalization-of-high-intensity-intermittent-fixed-submaximal-run-hi-ir",
    "href": "index.html#step-detection-and-normalization-of-high-intensity-intermittent-fixed-submaximal-run-hi-ir",
    "title": "Additional materials",
    "section": "1) Step detection and Normalization of High-intensity Intermittent-fixed Submaximal Run (HI-IR)",
    "text": "1) Step detection and Normalization of High-intensity Intermittent-fixed Submaximal Run (HI-IR)\nPrior to analysis, three trials were excluded�from the study due to insufficient data. The exclusion criterion was set at a minimum of 6 steps identified during the constant velocity phase. This threshold was chosen to ensure at least three steps per leg were captured, which we deemed as bare minimum for accurate assessment of the collected parameters during constant velocity (44). Step identification was performed using vertical acceleration peaks from the 100Hz Inertial Measurement Unit (IMU) data. We employed a method described by Benson et al. (45), implemented using the pracma package. All identified peaks were visually inspected for each athlete-trial to ensure accuracy.\nAn example of this process is outlined below.\n\n# load data\nSD_url &lt;-  \"https://raw.githubusercontent.com/R2mu/AdditionalMaterials/main/data_AddMat/exampleStepDetection.csv\"\n\nstepDet&lt;-fread(SD_url)\n\n# find peaks algorithm\n# settings chosen were based of visual inspection that most reliable identified peaks in contact across all individuals. \n\nfind_peaks &lt;- function(x,minPeakHeight=1.2) {\n  peak_indices &lt;- pracma::findpeaks(x, \n                                    threshold =0, \n                                    minpeakdistance = 16,\n                                    minpeakheight = minPeakHeight,\n                                    zero = \"+\")[, 2]\n  peak_indicator &lt;- as.integer(seq_along(x) %in% peak_indices) \n  return(peak_indicator)\n}\n\n\n# implementaion of find peaks across three sample players on a smoothed vertical acceleration signal can be seen below \n# Filtering was performed using a 4th order 25 hz low pass butterworth filter\n\nstepDet &lt;- stepDet[,bw.25_acc.up:=round(filtfilt(butter(1,.25,type=\"low\"), acc.up),2),by=.(ID)\n                ][,peak:=find_peaks(bw.25_acc.up,minPeakHeight = 1.2),\n                   by=.(ID)]\n\nVisual representation of step detection. This was performed for each testing occassion to ensure appropriate detection across all players.\n\nggplot(stepDet,aes(time/60,bw.25_acc.up))+\n  geom_path()+\n  geom_point(stepDet[peak==1,],mapping=aes(time/60,bw.25_acc.up),col=\"red\")+\n  facet_wrap(~ID,ncol=1,scales = \"free\",strip.position = \"top\")+\n  ggthemes::theme_tufte()+\n  labs (x= \"time (s)\",y = bquote(~CF-~SMFT~PL[VT]))+\n  ggthemes::geom_rangeframe()\n\n\n\n\nThis was then summarised along with other key Player load derived measures to make sure a minimum of 6 steps was used for further analysis. Below is an example of how this was summarized for each player on each testing occasion.\n\nstepDet[peak==1,.(count=.N),by=.(ID)]\n\n     ID count\n1: #ID1    19\n2: #ID2    21\n3: #ID3    19\n\n\n\nNormalization\nAs both duration and velocity of the HI-IRplateau directly influence accumulated accelerometer-vector loads and were expected to vary from week-to-week, an adjusted estimate was developed. Below is an outline of the steps followed.\n\nLoad and split data\n\nHIIR_url &lt;- \"https://raw.githubusercontent.com/R2mu/AdditionalMaterials/main/data_AddMat/HI_IR_data.csv\"\n\n#url\nHIIR_dat&lt;-fread(HIIR_url)[,ID       := as.factor(ID)\n   ][,Season   := as.factor(Season)\n   ][,logVT    := round(log(pl.up_CV_SMF1),3)\n   ][,logAP   := round(log(pl.fwd_CV_SMF1),3)\n   ][,logML  := round(log(pl.side_CV_SMF1),3)]\n\nset.seed(123)  # for reproducibility\n\nsplit &lt;- 0.7\ntrain &lt;- sample(nrow(HIIR_dat), split * nrow(HIIR_dat))\ntest  &lt;- setdiff(1:nrow(HIIR_dat), train)\n\ntrain_data &lt;- HIIR_dat[train, ]\ntest_data  &lt;- HIIR_dat[test, ]\n\n\n\nCreate fully specified model\n\nadj_gam &lt;- gam(pl.up_CV_SMF1~te(mu.vel_CV_SMF1,tm_CV_SMF1)+\n                             s(GH)+\n                             ## random effects matrix below\n                             s(ID, mu.vel_CV_SMF1, bs=\"re\")+\n                             s(Season, ID, bs = \"re\"),\n                           method = \"REML\",\n                   data = train_data)\n\n\nnon_log &lt;-simulateResiduals(adj_gam,n=1000)\n\nplot(non_log,title=\"Initial model response scale\")\n\n\n\n\nBased on the above results we will refit with log transformation and also explore a simpler model along with the fully specified model.\n\nadj.VT_null &lt;- gam(log(pl.up_CV_SMF1)~1+\n                             ## random effects matrix below\n                             s(ID, mu.vel_CV_SMF1, bs=\"re\")+\n                             s(Season,ID, bs = \"re\"),\n                           method = \"REML\",\n                   data = train_data)\n\n# simpler RE structure\nadj.VT_sml &lt;- gam(log(pl.up_CV_SMF1)~te(mu.vel_CV_SMF1,tm_CV_SMF1)+\n                             s(GH)+\n                             ## random effects matrix below\n                             s(ID, mu.vel_CV_SMF1, bs=\"re\")+\n                             s(ID, bs=\"re\"),\n                           method = \"REML\",\n                   data = train_data)\n\n# fully specified\nadj.VT_fs &lt;- gam(log(pl.up_CV_SMF1)~te(mu.vel_CV_SMF1,tm_CV_SMF1)+\n                             s(GH)+\n                             ## random effects matrix below\n                             s(ID, mu.vel_CV_SMF1, bs=\"re\")+\n                             s(Season,ID, bs = \"re\"),\n                           method = \"REML\",\n                   data = train_data)\n\n\nsim=DHARMa::simulateResiduals(adj.VT_sml,n=1000)\nplot(sim,title = \"Simple RE structure\")\n\n\n\n\n\nsim=DHARMa::simulateResiduals(adj.VT_fs,n=1000)\nplot(sim,title = \"Full RE structure\")\n\n\n\n\n\n\nAssess models\n\n#model_performance(adj.VT_fs)\ncompare_performance(adj.VT_null,adj.VT_sml,adj.VT_fs,metrics = \"common\")\n\nSome of the nested models seem to be identical\n\n\n# Comparison of Model Performance Indices\n\nName        | Model |  AIC (weights) |  BIC (weights) |    R2 |  RMSE\n---------------------------------------------------------------------\nadj.VT_null |   gam | 1131.0 (&lt;.001) | 1393.2 (&lt;.001) | 0.378 | 0.239\nadj.VT_sml  |   gam |  305.6 (&lt;.001) |  598.2 (0.994) | 0.854 | 0.115\nadj.VT_fs   |   gam |  197.2 (&gt;.999) |  608.6 (0.006) | 0.883 | 0.100\n\n\nSignificant improvements from the null model to the fully specified are noted above, we which were also assessed on the hold out data below.\n\nmodel_list &lt;- list(\n  null_model = adj.VT_null,\n  sparse_re = adj.VT_sml, # simplified random effects structure\n  full_re = adj.VT_fs # maximal random effects structure\n # acc_AP = log_adj_AP, place holder for acc.fwd\n#  acc_ML = log_adj_ML  place holder for acc.side\n)\n\n\nfor (model_name in names(model_list)) {\n  current_model &lt;- model_list[[model_name]]\n  \ntst_dat = test_data[,preds:=predict(current_model,.SD)\n        ][!is.na(preds),\n        ][,diff_sq := (logVT-preds)^2\n        ]  \n  \nrmse = tst_dat[,.(RMSE=sqrt(mean(diff_sq)))]\n\nprint(paste0(\"test data RMSE for \",model_name,\": \",round(rmse,2)))\n\n} \n\n[1] \"test data RMSE for null_model: 0.25\"\n[1] \"test data RMSE for sparse_re: 0.13\"\n[1] \"test data RMSE for full_re: 0.12\"\n\n\nWhile the full model exhibited a significant dispersion result, potentially indicating some over specification in the random effects structure, the remaining diagnostic measures were satisfactory. Given that our primary focus was on predictive performance and we believe that the full RE structure is more representative of the data at hand we stuck with the full RE model.\nPredicted vs. Observed plot on hold out data\n\nggplot(tst_dat,aes(logVT,preds))+\n  geom_point(pch=21,fill=\"gray80\",size=2)+\n  geom_abline(slope = 1,intercept = 0)+\n  labs(x=bquote(~Measured~PL[VT]),y=bquote(~Predicted~PL[VT]))+\n  theme_tufte()+\n  geom_rangeframe()\n\n\n\n\n\n\n\nNormalising fly results\nFirst, we retrained the chosen model on the full data set, this was performed for each acceleration vector from the IMU.\n\nlog_adj_VT_fin &lt;- gam(logVT~te(mu.vel_CV_SMF1,tm_CV_SMF1)+\n                             s(GH)+\n                             ## random effects matrix below\n                             s(ID, mu.vel_CV_SMF1, bs=\"re\")+\n                             s(Season,ID, bs = \"re\"),\n                           method = \"REML\",\n                   data = HIIR_dat)\n\nCreate a reference data.frame with average values\n\nref_data&lt;-copy(HIIR_dat)[,mu.vel_CV_SMF1 := round(mean(mu.vel_CV_SMF1),2)\n       ][,tm_CV_SMF1      := round(mean(tm_CV_SMF1),2)\n       ][,GH              := round(mean(GH),2)\n       ][,.(Season,ID,GH,nsteps_CV_SMF1,mu.vel_CV_SMF1,tm_CV_SMF1)\n      # create reference prediction based of average values\n       ][,refPred_VT     := round(predict.gam(log_adj_VT_fin,.SD),2)\n      # do some data cleaning for merging later\n       ][,setnames(.SD,\"mu.vel_CV_SMF1\",\"mu_vel\")\n       ][,setnames(.SD,\"tm_CV_SMF1\",\"mu_time\")\n       ][,!c(\"GH\",\"nsteps_CV_SMF1\")]\n\nCreate a prediction grid based of observed values for that day\n\nind_pred = HIIR_dat[,.(Season,ID,GH,nsteps_CV_SMF1,\n                           pl.up_CV_SMF1,pl.fwd_CV_SMF1,pl.side_CV_SMF1,\n                           mu.vel_CV_SMF1,tm_CV_SMF1,logVT),\n         # individual prediction: this would be extended fro AP and ML\n                      ][,indPred_VT   := round(predict.gam(log_adj_VT_fin),3)]\n\nJoin with reference prediction for normalisation.\n\nHIIR_adj=join(ind_pred,ref_data,how=\"left\",verbose=0\n       )[,logAdj_pl.VT   := logVT   - (indPred_VT-refPred_VT)]\n\nVisually represent the impact of adjustment on a subset of players\n\nset.seed(13)\n\nrs &lt;- sample(1:49,12,replace = F)\n\nexamp_lng &lt;- HIIR_adj[,.(ID,logVT,logAdj_pl.VT,indPred_VT)\n                    ][,melt.data.table(.SD,id.vars = 1:2)\n                    ][,variable:=ifelse(variable==\"logAdj_pl.VT\",\"Post Adjustment\",\"Pre Adjustment\")\n                    ][ID%in%rs,]\n\n\n\nggplot(examp_lng,aes(logVT,value,col=variable))+\n  geom_point(alpha=.3)+\n  stat_smooth(method = \"lm\",se=F)+\n  labs(x=\"measured VT_acc\",y=\"predicted VT_acc\",title = \"Subset of adjustment example\")+\n  theme_tufte()+\n  facet_wrap(~ID)+\n  theme(panel.background = element_rect(fill = NA))\n\n\n\n\nFrom a global perspective we can notice the reduction in variance post adjustment.\n\nHIIR_lng &lt;- HIIR_adj[,.(ID,logVT,logAdj_pl.VT)\n                     ][,melt.data.table(.SD,id.vars = 1)\n                     ][,variable:=ifelse(variable==\"logAdj_pl.VT\",\"Post Adjustment\",\"Pre Adjustment\")]\n\nggplot(HIIR_lng,aes(x=value,y=variable,fill=variable))+\n  stat_summary(fun.data = \"mean_sdl\",\n               geom = \"crossbar\",\n               fun.args = list(mult=1),position = position_nudge(y=.2),\n               width=.1,alpha=.3,\n               show.legend = F)+\n  geom_jitter(pch=21,height = 0.1,alpha=.3,show.legend = F)+\n  labs(x=bquote(PL[VT]), y = NULL)+\n  theme_tufte()+\n  theme(panel.background = element_rect(fill=NA))"
  },
  {
    "objectID": "index.html#cross-correlations",
    "href": "index.html#cross-correlations",
    "title": "Additional materials",
    "section": "2) Cross Correlations",
    "text": "2) Cross Correlations\nThis section will outline how the within participate cross correlations were computed.\nLoad data.\n\ncrossCor_url&lt;-\"https://raw.githubusercontent.com/R2mu/AdditionalMaterials/main/data_AddMat/crossCor_data.csv\"\n\n\nCrossCor_dat&lt;-fread(crossCor_url)[,ID := as.factor(ID)]\n\nVariables to use for cross correlations\n\ntoi &lt;-paste0(\"value_\",c(\"ave_GB\",\n                 \"ConPV_mx\",\"JHIM.mx\",\"FTCT.mx\",\"FZVmx\",\"EccDur.mn\",\"TTPP.mx\",\n                 \"tm_CV_SMF1\",\"mu.vel_CV_SMF1\",\n                 \"logAdj_pl.up\",\"logAdj_pl.fwd\",\"logAdj_pl.side\",\n                 \"HRmu_perc\",\n                 \"pl.up_CV_SMR1\",\"pl.fwd_CV_SMR1\",\"pl.side_CV_SMR1\"))\n\nCompute within participate correlation matrix\n\ncrossCor=rmcorr_mat(participant = as.factor(ID),\n                    variables = toi,\n                    dataset =CrossCor_dat,\n                    CI.level = 0.95)\n\nDo some data cleaning for graphical represent cross correlations\n\ngraphStrt &lt;- crossCor$summary |&gt;\n  mutate(\n    across(c(\"measure1\", \"measure2\"), ~sub(\"^value_\", \"\", .)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"ave_GB\",\"ADD~Strength\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"logAdj_pl.up\",\"HI-IR~PL[V]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"logAdj_pl.fwd\",\"HI-IR~PL[AP]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"logAdj_pl.side\",\"HI-IR~PL[ML]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"mu.vel_CV_SMF1\",\"HI-IR~Vel\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"tm_CV_SMF1\",\"HI-IR~Dur\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"pl.fwd_CV_SMR1\",\"CF-SMFT~PL[AP]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"pl.up_CV_SMR1\",\"CF-SMFT~PL[V]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"pl.side_CV_SMR1\",\"CF-SMFT~PL[ML]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"HRmu_perc\",\"CF-SMFT~HR[ex]\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"TTPP.mx\",\"CMJ~TTPP\",.x)),\n#    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"TTPF.mx\",\"CMJ~TTPF\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"EccDur.mn\",\"CMJ~Ecc~Dur\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"FZVmx\",\"CMJ~F0V\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"FTCT.mx\",\"CMJ~FT:CT\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"JHIM.mx\",\"CMJ~JH\",.x)),\n    across(c(\"measure1\", \"measure2\"), ~ifelse(.x==\"ConPV_mx\",\"CMJ~Con~Vel\",.x)),\n    r = rmcorr.r,  # Keep original r values\n    r_label = ifelse(r &gt; 0 & lowerCI &gt; 0.1 | r &lt; 0 & upperCI &lt; (-0.1), round(r,2), NA)  # Create a new column for labels\n  )\n\nTurn into graph object\n\ngraphCor &lt;-graphStrt|&gt;\n  graph_from_data_frame(directed = FALSE)\n\nPlot network graph\n\n  ggraph(graphCor,layout = \"circle\") +\n  geom_edge_link(aes(\n    edge_alpha = abs(r),\n    edge_width = abs(r), \n    color = r,\n    label = ifelse(is.na(r_label),\"\",r_label)),\n    label_size=3,\n    family = \"Times\",\n    lineend = \"round\",linejoin = \"round\"\n  ) +\n  guides(edge_alpha = \"none\", edge_width = \"none\") +\n  scale_edge_colour_gradientn(limits = c(-1, 1), \n                              breaks = c(-1,-.8,-0.5,-0.3,-0.1,0.1,0.3,0.5,0.8,1),\n                              colors = c(\"firebrick2\",\"white\",\"dodgerblue2\"),\n                              name=\"within participant correlation r\") +\n  geom_node_point(color = \"gray70\", size = 5,pch=21) +\n  geom_node_label(aes(label = name,\n                      hjust = ifelse(x &lt; 0, 1, 0),\n                      vjust = ifelse(y &lt; 0, 1,-0.1)),\n                  parse = T,\n                  size = 3.5,\n                  fill = \"white\",\n                  alpha=.2,\n                  family = \"Times\",\n                  label.padding = unit(0.1, \"lines\"),\n                  label.r = unit(0.1, \"lines\")) +\n  theme_graph() +\n  scale_x_continuous(expand = c(0.12,0.12))+\n  theme(legend.position = \"bottom\",\n        text = element_text(family = \"Times\",size = 12),\n        #axis.text = element_text(),\n        legend.title.position = \"bottom\",\n        legend.title = element_text(hjust=.5),\n        legend.key.width = unit(4,units = \"lines\"),  # Adjust overall legend width\n        legend.key.height = unit(0.5, \"lines\"))"
  },
  {
    "objectID": "index.html#within-athlete-variability-and-dose-response-effects",
    "href": "index.html#within-athlete-variability-and-dose-response-effects",
    "title": "Additional materials",
    "section": "3) Within Athlete variability and Dose response effects",
    "text": "3) Within Athlete variability and Dose response effects\nSee below an example of the process followed for quantifying the within athlete variability and fitting GAM models to assess dose response models.\n\nDVOI_scaled &lt;-paste0(\"Zscr_BT_\",c(\"ave_GB\",\n                          \"JHIM.mx\",\"FZVmx\",\"FTCT.mx\",\"TTPP.mx\",\n                          \"tm_CV_SMF1\",\"mu.vel_CV_SMF1\",\n                          \"logAdj_pl.up\",\"logAdj_pl.fwd\",\"logAdj_pl.side\",\n                          \"HRmu_perc\",\n                          \"pl.up_CV_SMR1\",\"pl.fwd_CV_SMR1\",\"pl.side_CV_SMR1\"))\n\nDVOI &lt;-paste0(\"value_\",c(\"ave_GB\",\n                          \"JHIM.mx\",\"FZVmx\",\"FTCT.mx\",\"TTPP.mx\",\n                          \"tm_CV_SMF1\",\"mu.vel_CV_SMF1\",\n                          \"logAdj_pl.up\",\"logAdj_pl.fwd\",\"logAdj_pl.side\",\n                          \"HRmu_perc\",\n                          \"pl.up_CV_SMR1\",\"pl.fwd_CV_SMR1\",\"pl.side_CV_SMR1\"))\n\n\n\ncvte_url&lt;-\"https://raw.githubusercontent.com/R2mu/AdditionalMaterials/main/data_AddMat/CVTE_data.csv\"\n\nCVTE_dat &lt;- fread(cvte_url)[,ID := as.factor(ID)\n                 ][,Season:=as.factor(Season)]\n\n\npacman::p_load(kableExtra,formattable, purrr)\n\nback_transform_mu &lt;- function(log_mean, log_sd) {\n  # Compute sigma squared\n  sigma_sq &lt;- log_sd^2\n  \n  # Calculate the mean on the original scale\n  mean_original &lt;- exp(log_mean + sigma_sq / 2)\n  \n  return(mean_original)\n}\n\n\n\nback_transform_sd &lt;- function(log_mean, log_sd) {\n  # Compute sigma squared\n  sigma_sq &lt;- log_sd^2\n  \n  # Calculate the mean on the original scale\n  mean_original &lt;- exp(log_mean + sigma_sq / 2)\n  \n  # Calculate the residual SD on the original scale\n  sd_original &lt;- mean_original * sqrt(exp(sigma_sq) - 1)\n  \n  return(sd_original)\n}\n\n  \nCV_TE  &lt;- list()\nplots  &lt;- list()\nedf    &lt;- list()\nemlist &lt;- list()\ncp     &lt;- list()\n\nfor (i in 1:length(DVOI)) {\n  \n  \n  DV_OI    = DVOI[i]\n  DV_Zscr  = DVOI_scaled[i]\n\n\n\n  # Null linear mixed effects models for TE estimation\n  null_mod = as.formula(paste0(DV_OI,'~1+(1|ID/Season)'))\n  \n  mer1  = lmer(null_mod,data = CVTE_dat)\n  SDgrp = VarCorr(mer1)|&gt;data.frame()|&gt;\n          dplyr::filter(grp==\"ID\")|&gt;\n          pull(sdcor)\n  \n  Resid = VarCorr(mer1)|&gt;data.frame()|&gt;\n          dplyr::filter(grp==\"Residual\")|&gt;\n          pull(sdcor)\n\n\n\n  \n# GAM formulation\n  null_std = as.formula(paste0(DV_Zscr,'~1+\n                       s(ID, bs = \"re\")+\n                       s(Season, ID, bs = \"re\")'))  \n\n # GAM model\n form_zscr = as.formula(paste0(DV_Zscr,'~\n                       s(Zscr_WI_TD_acu7,bs=\"gp\")+\n                       s(Zscr_WI_HIR_17_acu7,bs=\"gp\")+\n                       s(Zscr_WI_VHSR_25_acu7,bs=\"gp\")+\n                       s(ID, bs = \"re\")+\n                       s(Season, ID, bs = \"re\")'))\n # GAM model scaled\ngam_scaled &lt;- bam(form_zscr,     \n                 data = CVTE_dat,\n                 discrete = T,\n                 method = \"fREML\",\n                 select = T)\n \n\n\nvars &lt;- c(\"Zscr_WI_TD_acu7\", \"Zscr_WI_HIR_17_acu7\", \"Zscr_WI_VHSR_25_acu7\")\n\nprocess_variable &lt;- function(var_name) {\n  # Create the formula for emmeans\n  formula_str &lt;- paste0(\"revpairwise ~ \", var_name)\n  \n  # Get emmeans\n  em &lt;- emmeans(\n    gam_scaled,\n    as.formula(formula_str),\n    at = setNames(list(c(-1, 1)), var_name)\n  )\n  \n  # Extract emmean values\n  emmean_df &lt;- as.data.frame(em$emmeans)|&gt;\n    select(all_of(var_name), emmean)\n  \n  emmean_values &lt;- emmean_df$emmean\n  names(emmean_values) &lt;- emmean_df[[var_name]]\n  \n  # Get contrasts and process\n  contrast_df &lt;- summary(em$contrasts, infer = TRUE)|&gt;\n    as.data.frame()|&gt;\n    mutate(\n      contrast = word(contrast, 1, sep = \"\\\\-\"),\n      contrast = str_sub(contrast, end = -3)\n\n    )\n  \n  # Combine emmean values with contrasts\n  fin &lt;- contrast_df|&gt;\n    mutate(\n      X1 = emmean_values[as.character(-1)],\n      X2 = emmean_values[as.character(1)]\n    ) %&gt;%\n    select(contrast, X1, X2, estimate, lower.CL, upper.CL, t.ratio, p.value)\n  \n  return(fin)\n}\n\n\n\nemlist[[i]]&lt;-map_dfr(vars, process_variable)|&gt;\n  mutate(DV = DV_Zscr)|&gt;\n  dplyr::relocate(DV,.before = contrast)\n\n# for context against null model \ngam_null &lt;- bam(null_std,     \n                data = CVTE_dat,\n                discrete = T,\n                method = \"fREML\",\n                select = T)\n\n\n## extract GAM summary stats\nsm =summary(gam_scaled)\nedf[[i]]&lt;-sm$s.table|&gt;data.frame()|&gt;\n  tibble::rownames_to_column(\"var\")|&gt;\n  dplyr::mutate(DV = DV_Zscr)\n \n\n## Exatract smooth estimates\ncp[[i]] &lt;- smooth_estimates(gam_scaled,\n                            overall_uncertainty = T,\n                            unconditional = T) |&gt;\n  add_confint(coverage = .95)|&gt;\n  dplyr::filter(!.type==\"Random effect\")|&gt;\n  select(.smooth,.estimate,.lower_ci,.upper_ci,\n         Zscr_WI_TD_acu7,Zscr_WI_HIR_17_acu7,Zscr_WI_VHSR_25_acu7)|&gt;\n  melt(id.vars=1:4)|&gt;\n  mutate(DV = DV_Zscr)|&gt;\n  as.data.table()\n\n\n\nmu = mean(CVTE_dat[,get(DV_OI)],na.rm=T)\nsd = sd(CVTE_dat[,get(DV_OI)],na.rm=T)\n\n## clean table\n\nCV_TE[[i]]&lt;-broom.mixed::tidy(mer1,effects=\"ran_pars\",\n                  conf.int=T,conf.method=\"profile\")|&gt;\n    dplyr::filter(group==\"Residual\")|&gt;\n  mutate(DV = DV_OI,\n         Ave =  mu,\n         SD  =  sd,\n         Ave = ifelse(grepl(\"logAdj\",DV_OI),\n                      back_transform_mu(mu,sd),Ave),\n         SD =  ifelse(grepl(\"logAdj\",DV_OI), \n               back_transform_sd(mu,sd),SD),\n         Residual_te = Resid,\n         \n  ## Double check the below       \n         Residual_te = ifelse(grepl(\"logAdj\",DV_OI),\n                        back_transform_sd(mu,Resid),Residual_te),\n        conf.low= ifelse(grepl(\"logAdj\",DV_OI),\n                     back_transform_sd(mu,conf.low),conf.low),\n        conf.high= ifelse(grepl(\"logAdj\",DV_OI),\n                       back_transform_sd(mu,conf.high),conf.high))|&gt;\n  mutate(CV = ifelse(grepl(\"logAdj\",DV_OI),(exp(Resid) - 1) * 100,\n              estimate/Ave*100),\n         LL = ifelse(grepl(\"logAdj\",DV_OI),(exp(conf.low) - 1) * 100,\n              conf.low/Ave*100),\n         UL = ifelse(grepl(\"logAdj\",DV_OI),(exp(conf.high) - 1) * 100,\n              conf.high/Ave*100),\n         Null = performance::rmse(gam_null),\n         Null = ifelse(grepl(\"logAdj\",DV_OI),\n         back_transform_sd(mu,performance::rmse(gam_null)),Null),\n         Full  = performance::rmse(gam_scaled),\n         Full = ifelse(grepl(\"logAdj\",DV_OI),\n        back_transform_sd(mu,performance::rmse(gam_scaled)),Full))\n\nprint(DVOI[i])\n\n}\n\n[1] \"value_ave_GB\"\n[1] \"value_JHIM.mx\"\n[1] \"value_FZVmx\"\n[1] \"value_FTCT.mx\"\n[1] \"value_TTPP.mx\"\n[1] \"value_tm_CV_SMF1\"\n[1] \"value_mu.vel_CV_SMF1\"\n[1] \"value_logAdj_pl.up\"\n[1] \"value_logAdj_pl.fwd\"\n[1] \"value_logAdj_pl.side\"\n[1] \"value_HRmu_perc\"\n[1] \"value_pl.up_CV_SMR1\"\n[1] \"value_pl.fwd_CV_SMR1\"\n[1] \"value_pl.side_CV_SMR1\"\n\n\nCreate example of Table 1.\n\npacman::p_load(kableExtra)\n\n rbindlist(CV_TE)|&gt; \n  mutate_if(is.numeric, round,2)|&gt;\n  select(DV,Ave,SD,Residual_te,conf.low,conf.high,CV,LL,UL,Null,Full)|&gt;\n  mutate(DV = case_when(DV==\"value_ave_GB\"~\"Adductor Strength (N)\",\n                        DV==\"value_JHIM.mx\"~\"Jump height (cm)\",\n                        DV==\"value_FZVmx\"~\"Fz at 0v (N)\",\n                        DV==\"value_FTCT.mx\"~\"FT/CT\",\n                        DV==\"value_TTPP.mx\"~\"TTPP\",\n                        DV==\"value_tm_CV_SMF1\"~\"SMF Duration\",\n                        DV==\"value_mu.vel_CV_SMF1\"~\"SMF Velocity\",\n                        DV==\"value_logAdj_pl.up\"~\"SMF PL.VT\",\n                        DV==\"value_logAdj_pl.fwd\"~\"SMF PL.AP\",\n                        DV==\"value_logAdj_pl.side\"~\"SMF PL.ML\",\n                        DV==\"value_HRmu_perc\"~\"CF-SMFT HR%\",\n                        DV==\"value_pl.up_CV_SMR1\"~\"CF-SMFT PL.VT\",\n                        DV==\"value_pl.fwd_CV_SMR1\"~\"CF-SMFT PL.AP\",\n                        DV==\"value_pl.side_CV_SMR1\"~\"CF-SMFT PL.ML\"\n                        ))|&gt;\n  kableExtra::kable()|&gt;\n    add_header_above(c(\" \",\"Descriptive\" = 2, \"residual SD/TE\" = 3,\n                       \"CV%\" = 3,\"RMSE\" = 2))|&gt;\n  pack_rows(\"Groin Bar\", 1,1) |&gt;\n  pack_rows(\"CMJ\", 2, 5) |&gt;\n  pack_rows(\"HI-IR assessment\", 6, 10) |&gt;\n  pack_rows(\"CF-SMFT assessment\",11, 14) |&gt;\n  kable_paper()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDescriptive\n\n\nresidual SD/TE\n\n\nCV%\n\n\nRMSE\n\n\n\nDV\nAve\nSD\nResidual_te\nconf.low\nconf.high\nCV\nLL\nUL\nNull\nFull\n\n\n\n\nGroin Bar\n\n\nAdductor Strength (N)\n478.30\n82.75\n32.64\n31.47\n33.89\n6.82\n6.58\n7.09\n0.39\n0.39\n\n\nCMJ\n\n\nJump height (cm)\n37.51\n4.45\n1.68\n1.59\n1.77\n4.48\n4.25\n4.72\n0.38\n0.36\n\n\nFz at 0v (N)\n2408.31\n459.24\n145.29\n137.91\n153.36\n6.03\n5.73\n6.37\n0.30\n0.30\n\n\nFT/CT\n0.91\n0.16\n0.07\n0.06\n0.07\n7.14\n6.77\n7.53\n0.38\n0.38\n\n\nTTPP\n0.65\n0.12\n0.05\n0.05\n0.05\n7.32\n6.94\n7.72\n0.38\n0.38\n\n\nHI-IR assessment\n\n\nSMF Duration\n4.13\n1.35\n1.23\n1.17\n1.30\n29.72\n28.24\n31.34\n0.89\n0.85\n\n\nSMF Velocity\n24.93\n2.64\n2.43\n2.31\n2.57\n9.75\n9.25\n10.29\n0.91\n0.84\n\n\nSMF PL.VT\n2.62\n0.53\n0.28\n0.26\n0.29\n11.24\n29.90\n33.86\n1.62\n1.61\n\n\nSMF PL.AP\n1.48\n0.28\n0.19\n0.18\n0.21\n14.06\n20.13\n22.77\n1.33\n1.27\n\n\nSMF PL.ML\n1.49\n0.29\n0.21\n0.20\n0.22\n15.01\n21.76\n24.64\n1.46\n1.45\n\n\nCF-SMFT assessment\n\n\nCF-SMFT HR%\n76.22\n4.40\n2.67\n2.52\n2.83\n3.50\n3.30\n3.72\n0.57\n0.54\n\n\nCF-SMFT PL.VT\n19.59\n3.45\n1.58\n1.49\n1.67\n8.04\n7.60\n8.53\n0.50\n0.49\n\n\nCF-SMFT PL.AP\n9.21\n1.63\n0.98\n0.92\n1.03\n10.59\n10.00\n11.23\n0.56\n0.54\n\n\nCF-SMFT PL.ML\n8.91\n1.96\n1.08\n1.02\n1.15\n12.12\n11.45\n12.85\n0.59\n0.56\n\n\n\n\n\n\n  #kableExtra::kable_styling(bootstrap_options = c(\"hover\"))\n\nGAM summary table merged with marginal means\n\nedf_bind &lt;- rbindlist(edf)|&gt;\n        mutate_if(is.numeric, round,2)|&gt;\n        select(DV,var,edf,F,p.value)|&gt;\n        dplyr::filter(F&gt;=3&!var==\"s(ID)\"&!var==\"s(Season,ID)\")|&gt;\n        dplyr::rename(contrast=var)|&gt;\n        dplyr::rename(edf_pvalue=p.value)|&gt;\n        dplyr::mutate(contrast =  str_extract(contrast, \"(?&lt;=\\\\().*(?=\\\\))\"))|&gt;\n        setDT()\n\nemm_bind &lt;- rbindlist(emlist)|&gt; \n            mutate_if(is.numeric, round,2)\n\njoin(edf_bind,emm_bind)|&gt;\n    kableExtra::kable()|&gt;\n      add_header_above(c(\"\",\"\",\"gam summary\" = 3, \"Estimated marginal means\" = 7))|&gt;\n  kable_paper()\n\nleft join: edf_bind[DV, contrast] 9/9 (100%) &lt;m:m&gt; emm_bind[DV, contrast] 9/42 (21.4%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngam summary\n\n\nEstimated marginal means\n\n\n\nDV\ncontrast\nedf\nF\nedf_pvalue\nX1\nX2\nestimate\nlower.CL\nupper.CL\nt.ratio\np.value\n\n\n\n\nZscr_BT_JHIM.mx\nZscr_WI_TD_acu7\n3.23\n11.81\n0.00\n0.07\n-0.13\n-0.19\n-0.27\n-0.11\n-4.57\n0.00\n\n\nZscr_BT_FTCT.mx\nZscr_WI_TD_acu7\n2.81\n3.05\n0.01\n-0.06\n-0.15\n-0.09\n-0.18\n0.00\n-1.93\n0.05\n\n\nZscr_BT_tm_CV_SMF1\nZscr_WI_HIR_17_acu7\n6.35\n5.39\n0.00\n0.11\n-0.09\n-0.19\n-0.55\n0.17\n-1.05\n0.29\n\n\nZscr_BT_mu.vel_CV_SMF1\nZscr_WI_TD_acu7\n3.40\n3.74\n0.00\n0.13\n-0.36\n-0.50\n-0.80\n-0.20\n-3.24\n0.00\n\n\nZscr_BT_mu.vel_CV_SMF1\nZscr_WI_HIR_17_acu7\n6.51\n8.35\n0.00\n-0.18\n0.35\n0.53\n0.15\n0.91\n2.72\n0.01\n\n\nZscr_BT_HRmu_perc\nZscr_WI_TD_acu7\n2.40\n9.56\n0.00\n0.34\n-0.23\n-0.57\n-0.76\n-0.38\n-5.99\n0.00\n\n\nZscr_BT_HRmu_perc\nZscr_WI_HIR_17_acu7\n1.79\n3.38\n0.00\n-0.12\n0.18\n0.30\n0.10\n0.51\n2.90\n0.00\n\n\nZscr_BT_pl.side_CV_SMR1\nZscr_WI_HIR_17_acu7\n0.96\n3.35\n0.00\n-0.31\n0.13\n0.44\n0.25\n0.63\n4.61\n0.00\n\n\nZscr_BT_pl.side_CV_SMR1\nZscr_WI_VHSR_25_acu7\n4.03\n3.17\n0.00\n0.12\n-0.07\n-0.18\n-0.38\n0.01\n-1.88\n0.06\n\n\n\n\n\n\n\nClean data for plotting\n\npltDat&lt;- rbindlist(cp)[,DV:=sub(\"^Zscr_BT_\", \"\", DV)\n                     ][,DV:=fcase(DV == \"ave_GB\",\"~Adductor~Strength\",\n                                  DV== \"FZVmx\",\"CMJ~F0V\",\n                                  DV== \"FTCT.mx\",\"CMJ~FT:CT\",\n                                  DV== \"TTPP.mx\",\"CMJ~TTPP\",\n                                  DV== \"JHIM.mx\",\"CMJ~JH\",\n                                  DV== \"mu.vel_CV_SMF1\",\"HI-IR~Vel\",\n                                  DV== \"tm_CV_SMF1\",\"HI-IR~Dur\",\n                                  DV== \"logAdj_pl.up\",\"HI-IR~PL[V]\",\n                                  DV== \"logAdj_pl.fwd\",\"HI-IR~PL[AP]\",\n                                  DV== \"logAdj_pl.side\",\"HI-IR~PL[ML]\",\n                                  DV== \"HRmu_perc\",\"CF-SMFT~HR[ex]\",\n                                  DV== \"pl.up_CV_SMR1\",\"CF-SMFT~PL[V]\",\n                                  DV== \"pl.fwd_CV_SMR1\",\"CF-SMFT~PL[AP]\",\n                                  DV== \"pl.side_CV_SMR1\",\"CF-SMFT~PL[ML]\")\n              # Dropped below for the sake of a 3*4 grid\n                ][!DV==\"HI-IR~Dur\",]\n\nCMJ dose response effects\n\nggplot(pltDat[grepl(\"CMJ\",DV),],\n       aes(value,.estimate,fill=variable,col=variable,\n           ymin=.lower_ci,ymax=.upper_ci))+\n     geom_ribbon(alpha=.3,col=NA)+\n    geom_hline(yintercept = c(-0.3,0.3),linetype=\"dashed\",col=\"gray70\")+\n    geom_hline(yintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_vline(xintercept = c(-1,1),linetype=\"dashed\",col=\"gray70\")+\n    geom_vline(xintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_path()+\n    facet_wrap(~DV, labeller = label_parsed)+\n    theme_tufte()+\n    ylim(c(-3,3))+\n    labs(x = \"Within participant scaled load\",\n       y = \"Between participant scaled response\")+\n    theme(legend.position = \"bottom\",\n        panel.background = element_rect(fill = NA,colour=\"gray30\"))\n\nWarning: Removed 600 rows containing missing values or values outside the scale range\n(`geom_path()`).\n\n\n\n\n\nHI-IR dose repsonse\n\nggplot(pltDat[grepl(\"HI-IR\",DV),],\n       aes(value,.estimate,fill=variable,col=variable,\n           ymin=.lower_ci,ymax=.upper_ci))+\n     geom_ribbon(alpha=.3,col=NA)+\n    geom_hline(yintercept = c(-0.3,0.3),linetype=\"dashed\",col=\"gray70\")+\n    geom_hline(yintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_vline(xintercept = c(-1,1),linetype=\"dashed\",col=\"gray70\")+\n    geom_vline(xintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_path()+\n    facet_wrap(~DV, labeller = label_parsed)+\n    theme_tufte()+\n    ylim(c(-3,3))+\n    labs(x = \"Within participant scaled load\",\n       y = \"Between participant scaled response\")+\n    theme(legend.position = \"bottom\",\n        panel.background = element_rect(fill = NA,colour=\"gray30\"))\n\nWarning: Removed 600 rows containing missing values or values outside the scale range\n(`geom_path()`).\n\n\n\n\n\nCF - SMFT dose response\n\nggplot(pltDat[grepl(\"CF-SMFT\",DV),],\n       aes(value,.estimate,fill=variable,col=variable,\n           ymin=.lower_ci,ymax=.upper_ci))+\n     geom_ribbon(alpha=.3,col=NA)+\n    geom_hline(yintercept = c(-0.3,0.3),linetype=\"dashed\",col=\"gray70\")+\n    geom_hline(yintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_vline(xintercept = c(-1,1),linetype=\"dashed\",col=\"gray70\")+\n    geom_vline(xintercept = 0,linetype=\"dashed\",col=\"gray7\")+\n    geom_path()+\n    facet_wrap(~DV, labeller = label_parsed)+\n    theme_tufte()+\n  labs(x = \"Within participant scaled load\",\n       y = \"Between participant scaled response\")+\n    ylim(c(-3,3))+\n    theme(legend.position = \"bottom\",\n        panel.background = element_rect(fill = NA,colour=\"gray30\"))\n\nWarning: Removed 600 rows containing missing values or values outside the scale range\n(`geom_path()`)."
  }
]
